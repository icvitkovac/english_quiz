{"version":3,"sources":["C:/Projects/englishQuiz/assets/$_gendir lazy","C:/Projects/englishQuiz/assets/app/admin/admin.component.html","C:/Projects/englishQuiz/assets/app/admin/admin.component.ts","C:/Projects/englishQuiz/assets/app/admin/settings/settings.component.css","C:/Projects/englishQuiz/assets/app/admin/settings/settings.component.html","C:/Projects/englishQuiz/assets/app/admin/settings/settings.component.ts","C:/Projects/englishQuiz/assets/app/admin/word-add/word-add.component.html","C:/Projects/englishQuiz/assets/app/admin/word-add/word-add.component.ts","C:/Projects/englishQuiz/assets/app/admin/word-update/word-update.component.html","C:/Projects/englishQuiz/assets/app/admin/word-update/word-update.component.ts","C:/Projects/englishQuiz/assets/app/app-routing.module.ts","C:/Projects/englishQuiz/assets/app/app.component.css","C:/Projects/englishQuiz/assets/app/app.component.html","C:/Projects/englishQuiz/assets/app/app.component.ts","C:/Projects/englishQuiz/assets/app/app.module.ts","C:/Projects/englishQuiz/assets/app/directives/highlight.directive.ts","C:/Projects/englishQuiz/assets/app/game-picker/game-picker.component.html","C:/Projects/englishQuiz/assets/app/game-picker/game-picker.component.ts","C:/Projects/englishQuiz/assets/app/main/main.component.html","C:/Projects/englishQuiz/assets/app/main/main.component.ts","C:/Projects/englishQuiz/assets/app/models/word.ts","C:/Projects/englishQuiz/assets/app/notification/notification.component.html","C:/Projects/englishQuiz/assets/app/notification/notification.component.ts","C:/Projects/englishQuiz/assets/app/notification/notification.service.ts","C:/Projects/englishQuiz/assets/app/services/game.service.ts","C:/Projects/englishQuiz/assets/app/services/init.service.ts","C:/Projects/englishQuiz/assets/app/services/settings.service.ts","C:/Projects/englishQuiz/assets/app/services/user.service.ts","C:/Projects/englishQuiz/assets/app/services/word.service.ts","C:/Projects/englishQuiz/assets/app/stats/stats.component.html","C:/Projects/englishQuiz/assets/app/stats/stats.component.ts","C:/Projects/englishQuiz/assets/app/word-display/word-display.component.html","C:/Projects/englishQuiz/assets/app/word-display/word-display.component.ts","C:/Projects/englishQuiz/assets/app/word-longest/word-longest.component.css","C:/Projects/englishQuiz/assets/app/word-longest/word-longest.component.html","C:/Projects/englishQuiz/assets/app/word-longest/word-longest.component.ts","C:/Projects/englishQuiz/assets/environments/environment.ts","C:/Projects/englishQuiz/assets/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../assets/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/englishQuiz/assets/$$_gendir lazy\n// module id = ../../../../../assets/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"one-third column\\\">\\n    <h5>Edit or delete words that you added</h5>\\n    <ul class=\\\"words\\\">\\n      <form [formGroup]=\\\"adminForm\\\"><input formControlName=\\\"searchField\\\" placeholder=\\\"Start typing the word\\\"></form>\\n      <li *ngFor=\\\"let word of words\\\" (click)=\\\"onSelect(word)\\\">\\n        <span [myHighlight] class=\\\"badge\\\">{{word.value}}</span>\\n        <button class=\\\"delete-button\\\" (click)=\\\"onDelete(word, $event)\\\">Delete</button>\\n      </li>\\n    </ul>\\n\\n    <word-update [word]=\\\"selectedWord\\\"></word-update>\\n\\n  </div>\\n\\n  <div class=\\\"two-thirds column\\\">\\n    <word-add></word-add>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <settings></settings>\\n</div>\\n\\n<notification></notification>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/englishQuiz/assets/app/admin/admin.component.html\n// module id = ../../../../../assets/app/admin/admin.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { WordService } from '../services/word.service';\nimport { Word } from '../models/word';\nimport { WordUpdateComponent } from './word-update/word-update.component';\nimport { WordAddComponent } from './word-add/word-add.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { HighlightDirective } from '../directives/highlight.directive';\nimport { NotificationService } from '../notification/notification.service';\nimport { NotificationComponent } from '../notification/notification.component';\n\n@Component({\n  selector: 'admin-component',\n  providers: [WordService, NotificationService, WordUpdateComponent, WordAddComponent, SettingsComponent, NotificationComponent],\n  templateUrl: './admin.component.html'\n})\n\n\nexport class AdminComponent {\n\n  adminForm = new FormGroup ({\n    searchField: new FormControl()\n  });\n\n  private words: Word[];\n  private selectedWord: Word;\n\n  constructor(private _wordService: WordService,\n    private _notificationService: NotificationService\n  ) {\n\n\n\n    // this.adminForm.searchField.valueChanges\n    //   .debounceTime(400)\n    //   .flatMap((term: string) => this._wordService.search(term))\n    //   .subscribe((result: Word[]) => {\n    //     this.words = result;\n    //   });\n  }\n\n  onSelect(word: Word): void {\n    this.selectedWord = word;\n  }\n\n  onDelete(word: Word, event: any): void {\n    event.stopPropagation();\n\n    this._wordService\n      .destroy(word)\n      .subscribe(() => {\n        this._notificationService.show({ type: 'success', message: 'Word deleted.', hasCloseButton: true, autoClose: true });\n      });\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/admin/admin.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/englishQuiz/assets/app/admin/settings/settings.component.css\n// module id = ../../../../../assets/app/admin/settings/settings.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"!isLanguageSet && languages.length\\\">\\n  \\n    <h3>Pick a language</h3>\\n    <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedWorkout\\\" (ngModelChange)=\\\"updateUser($event)\\\">\\n      <option *ngFor=\\\"let language of languages\\\" value=\\\"{{language.value}}\\\">{{language.name}}</option>\\n  </select>\\n  </div>\\n  \\n  <div *ngIf=\\\"settings\\\">\\n      <ul>\\n          <label for=\\\"questionsNumber\\\">Number of questions in the game - valid when in practice mode</label>\\n          <li [class.disabled]=\\\"!settings.practiceMode\\\">Number of questions <input [disabled]=\\\"!settings.practiceMode\\\" id=\\\"questionsNumber\\\" [(ngModel)]=\\\"settings.questionsNumber\\\"\\n              /></li>\\n  \\n          <label for=\\\"practiceMode\\\">When selected, enables open ended game, with your own words only</label>\\n          <li>Practice mode <input id=\\\"practiceMode\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"settings.practiceMode\\\" /></li>\\n          <button class=\\\"update-button\\\" (click)=\\\"onSave(settings)\\\">Save</button>\\n  \\n      </ul>\\n  </div>\\n  \\n  <notification></notification>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/englishQuiz/assets/app/admin/settings/settings.component.html\n// module id = ../../../../../assets/app/admin/settings/settings.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Settings } from '../../models/settings';\nimport { SettingsService } from '../../services/settings.service';\nimport { UserService } from '../../services/user.service';\nimport { NotificationService } from '../../notification/notification.service';\n\n\n@Component({\n  selector: 'settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css'],\n  providers: [NotificationService, UserService, SettingsService]\n\n})\n\nexport class SettingsComponent implements OnInit {\n\n  private settings: Settings;\n  private languages = [];\n  private isLanguageSet = false;\n\n\n\n  constructor(private _settingsService: SettingsService, private _notificationService: NotificationService, private _userService: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.isLanguageSet = window['Globals'].locale !== 'null' && !window['Globals'].locale.startsWith('en');\n\n    if (!this.isLanguageSet) {\n      this._settingsService.languages()\n        .subscribe((languages: Object[]) => {\n          for (const key in languages) {\n\n            if (languages.hasOwnProperty(key)) {\n              this.languages.push({ name: languages[key], value: key });\n            }\n\n          }\n\n        });\n    }\n    this._settingsService.get()\n      .subscribe((settings: Settings) => {\n        this.settings = settings;\n      });\n  }\n\n  onSave(settings: Settings): void {\n    this._settingsService\n      .update(settings)\n      .subscribe((serviceSettings: Settings) => {\n        this.settings = serviceSettings;\n        this._notificationService.show({ type: 'success', message: 'Settings saved.', hasCloseButton: true, autoClose: true });\n\n      });\n  }\n\n  updateUser(languageSelection: string): void {\n    this._userService\n      .setLocale(languageSelection)\n      .subscribe((userData) => {\n        this.isLanguageSet = true;\n        window['Globals'].locale = userData.locale;\n\n        this._notificationService.show({\n          type: 'success',\n          message: 'Language set, thank you very much!',\n          hasCloseButton: true,\n          autoClose: true\n        });\n      });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/admin/settings/settings.component.ts","module.exports = \"<h5>Add new word</h5>\\n<form (ngSubmit)=\\\"onSubmit()\\\" #wordForm=\\\"ngForm\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"one-third column\\\">\\n      <label for=\\\"englishTem\\\">English term</label>\\n      <input type=\\\"text\\\" id=\\\"englishTem\\\" required [(ngModel)]=\\\"word.value\\\" name=\\\"wordValue\\\">\\n    </div>\\n\\n    <div class=\\\"one-third column\\\">\\n      <label for=\\\"correctAnswer\\\">Correct answer</label>\\n      <input type=\\\"text\\\" id=\\\"correctAnswer\\\" required [(ngModel)]=\\\"word.translations[0]\\\" name=\\\"word.trasnlation\\\">\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"one-third column\\\">\\n      <label for=\\\"falseAnswers\\\">False answers</label>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"three columns\\\">\\n      <input type=\\\"text\\\" id=\\\"falseAnswers\\\" required [(ngModel)]=\\\"word.translations[1]\\\" name=\\\"falseAnswer1\\\">\\n    </div>\\n\\n    <div class=\\\"three columns\\\">\\n      <input type=\\\"text\\\" required [(ngModel)]=\\\"word.translations[2]\\\" name=\\\"falseAnswer2\\\">\\n    </div>\\n\\n    <div class=\\\"three columns\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"word.translations[3]\\\" name=\\\"falseAnswer3\\\">\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"one-third column\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!wordForm.form.valid\\\">Add word</button>\\n    </div>\\n  </div>\\n\\n</form>\\n\\n<div class=\\\"error\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\n\\n<div [hidden]=\\\"!submitted\\\">\\n  <h4>Newly added</h4>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-9  pull-left\\\">{{ word.value }}</div>\\n    <ul>\\n      <li *ngFor=\\\"let t of word.translations\\\">{{t}}\\n      </li>\\n    </ul>\\n  </div>\\n\\n</div>\\n\\n<notification></notification>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/englishQuiz/assets/app/admin/word-add/word-add.component.html\n// module id = ../../../../../assets/app/admin/word-add/word-add.component.html\n// module chunks = main","import { Component, Input } from '@angular/core';\nimport { WordService } from '../../services/word.service';\nimport { Word } from '../../models/word';\nimport { NotificationService } from '../../notification/notification.service';\nimport { NotificationComponent } from '../../notification/notification.component';\n\n@Component({\n  selector: 'word-add',\n  templateUrl: './word-add.component.html',\n  providers: [WordService, NotificationService, NotificationComponent]\n})\n\nexport class WordAddComponent {\n  @Input()\n  private submitted = false;\n  private word = new Word(0, '', false, []);\n\n  constructor(private _wordService: WordService, private _notificationService: NotificationService) {\n  }\n\n  onSubmit(): void {\n    this._wordService\n      .add(this.word)\n      .subscribe(() => {\n        this.submitted = true;\n        this._notificationService.show({ type: 'success', message: 'Word successfully added.', autoClose: true });\n      }, err => {\n        this._notificationService.show({ type: 'error', message: `There has been an error: ${err}.`, hasCloseButton: true });\n      });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/admin/word-add/word-add.component.ts","module.exports = \"<div *ngIf=\\\"word\\\">\\n  <h5>{{word.value}} details!</h5>\\n  <div>\\n    <label>name: </label>\\n    <input [(ngModel)]=\\\"word.value\\\" placeholder=\\\"name\\\" />\\n  </div>\\n\\n  <ul>\\n    <li *ngFor=\\\"let t of word.translations\\\">\\n      <input [(ngModel)]=\\\"t.value\\\" />\\n    </li>\\n  </ul>\\n\\n  <button class=\\\"update-button\\\" (click)=\\\"onSave(word)\\\">Save</button>\\n</div>\\n\\n<notification></notification>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/englishQuiz/assets/app/admin/word-update/word-update.component.html\n// module id = ../../../../../assets/app/admin/word-update/word-update.component.html\n// module chunks = main","import {Component, Input} from '@angular/core';\nimport {Word} from '../../models/word';\nimport {WordService} from '../../services/word.service';\nimport {NotificationService} from '../../notification/notification.service';\nimport {NotificationComponent} from '../../notification/notification.component';\n\n@Component({\n  selector: 'word-update',\n  templateUrl: './word-update.component.html',\n  providers: [WordService, NotificationService, NotificationComponent],\n})\nexport class WordUpdateComponent {\n  @Input()\n  private word: Word;\n\n  constructor(private _wordService: WordService, private _notificationService: NotificationService) {\n\n  }\n\n  onSave(word: Word): void {\n    this._wordService\n      .update(word)\n      .subscribe((updatedWord: Word) => {\n        this.word = updatedWord;\n        this._notificationService.show({ type: 'success', message: 'Word successfully updated.', autoClose: true });\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/admin/word-update/word-update.component.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { StatsComponent } from './stats/stats.component';\r\nimport { GamePickerComponent } from './game-picker/game-picker.component';\r\nimport { WordLongestComponent } from './word-longest/word-longest.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: 'pick'\r\n    },\r\n    {\r\n        path: 'administration',\r\n        component: AdminComponent\r\n    },\r\n    {\r\n        path: 'stats',\r\n        component: StatsComponent\r\n    },\r\n    {\r\n        path: 'main',\r\n        component: MainComponent\r\n    },\r\n    {\r\n        path: 'pick',\r\n        component: GamePickerComponent\r\n    },\r\n    {\r\n        path: 'longest-word',\r\n        component: WordLongestComponent\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n    providers: []\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/englishQuiz/assets/app/app.component.css\n// module id = ../../../../../assets/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row header\\\">\\n  <div class=\\\"nine columns\\\">\\n    <a [routerLink]=\\\"['/pick']\\\">Game picker</a>\\n    <a [routerLink]=\\\"['/main']\\\">Quiz</a>\\n    <a [routerLink]=\\\"['/administration']\\\">Admin</a>\\n    <a [routerLink]=\\\"['/stats']\\\">Stats</a>\\n  </div>\\n  <div class=\\\"three columns\\\">\\n    <span>{{name}}</span>\\n    <a href=\\\"/logout\\\">Logout</a>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"twelve columns\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/englishQuiz/assets/app/app.component.html\n// module id = ../../../../../assets/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-english-quiz',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  private name: string;\n\n  constructor() {\n    try {\n      this.name = window['Globals'].name;\n    } catch (e) {\n      this.name = 'Unknown';\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\nimport { AppRoutingModule } from './app-routing.module';\n\n\nimport { AdminComponent } from './admin/admin.component';\nimport { MainComponent } from './main/main.component';\nimport { StatsComponent } from './stats/stats.component';\nimport { GamePickerComponent } from './game-picker/game-picker.component';\nimport { WordLongestComponent } from './word-longest/word-longest.component';\nimport { SettingsComponent } from './admin/settings/settings.component';\nimport { WordAddComponent } from './admin/word-add/word-add.component';\nimport { WordUpdateComponent } from './admin/word-update/word-update.component';\nimport { HighlightDirective } from './directives/highlight.directive';\nimport { NotificationComponent } from './notification/notification.component';\nimport { WordDisplayComponent } from './word-display/word-display.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminComponent,\n    SettingsComponent,\n    WordAddComponent,\n    WordUpdateComponent,\n    HighlightDirective,\n    GamePickerComponent,\n    MainComponent,\n    NotificationComponent,\n    StatsComponent,\n    WordDisplayComponent,\n    WordLongestComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    HttpModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/app.module.ts","import { Directive, ElementRef, Input } from '@angular/core';\n@Directive({\n  selector: '[myHighlight]',\n  host: {\n    '(mouseenter)': 'onMouseEnter()',\n    '(mouseleave)': 'onMouseLeave()'\n  }\n})\nexport class HighlightDirective {\n  private _defaultColor = '#0FA0CE';\n  private el: HTMLElement;\n\n  constructor(el: ElementRef) {\n    this.el = el.nativeElement;\n  }\n\n  @Input('myHighlight') highlightColor: string;\n\n  onMouseEnter() {\n    this.highlight(this.highlightColor || this._defaultColor);\n  }\n\n  onMouseLeave() {\n    this.highlight(null);\n  }\n\n  private highlight(color: string) {\n    this.el.style.backgroundColor = color;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/directives/highlight.directive.ts","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"two columns\\\">&nbsp;</div>\\n  <div class=\\\"four columns\\\">\\n      <div class=\\\"game-link\\\" [routerLink]=\\\"['/main']\\\">\\n          <span>Play quiz</span>\\n      </div>\\n  </div>\\n  <div class=\\\"four columns\\\">\\n       <div class=\\\"game-link\\\" [routerLink]=\\\"['/longest-word']\\\">\\n          <span>Longest word</span>\\n      </div>\\n  </div>\\n  <div class=\\\"two columns\\\">&nbsp;</div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"two columns\\\">&nbsp;</div>\\n  <div class=\\\"four columns\\\">\\n      <div class=\\\"game-link\\\">\\n          <span>CHILD WORDS</span>\\n      </div>\\n  </div>\\n</div>\\n\\n<notification></notification>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/englishQuiz/assets/app/game-picker/game-picker.component.html\n// module id = ../../../../../assets/app/game-picker/game-picker.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { NotificationService } from '../notification/notification.service';\nimport { NotificationComponent } from '../notification/notification.component';\nimport { InitService } from '../services/init.service';\n// import * as notificationCodes from '../constants/constants';\n\n@Component({\n\n  selector: 'selector',\n  providers: [NotificationService, InitService],\n  templateUrl: './game-picker.component.html'\n})\nexport class GamePickerComponent implements OnInit {\n  private locale: string = window['Globals'].locale;\n  constructor(private _notificationService: NotificationService, private _initService: InitService) {\n  }\n\n  ngOnInit() {\n\n    if (this.locale === 'null' || this.locale.startsWith('en')) {\n      this._notificationService.show({ type: 'warn', message: 'Please set desired language in order to play!' });\n\n    }\n\n    this._initService.get()\n      .subscribe((data) => {\n        data.forEach(element => {\n          if (element.reportedWord) {\n            this._notificationService.show({\n              type: 'warn', message: `Word ${element.reportedWord.value} has\n                         been reported as inaccurate by other users, please review its translations`, autoClose: true\n            });\n          }\n        });\n      }, err => {\n        this._notificationService.show({ type: 'error', message: `There has been an error: ${err}.`, hasCloseButton: true });\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/game-picker/game-picker.component.ts","module.exports = \"<div class=\\\"row\\\">\\n  <p> There are total of {{wordCount}} words in the database.</p>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <button [disabled]=\\\"buttonState()\\\" (click)=\\\"startGame()\\\" *ngIf=\\\"!isStarted\\\">START</button>\\n  <button (click)=\\\"endGame()\\\" *ngIf=\\\"isStarted\\\">END</button>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <random-word (onGameOver)=\\\"onGameOver($event)\\\" [word]=\\\"guessWord\\\"></random-word>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div *ngIf=\\\"settings\\\">\\n    {{settings.questionsNumber}} questions in the game.\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <h3 *ngIf=\\\"countDown\\\">Game starting in {{countDown}}</h3>\\n</div>\\n\\n<div *ngIf=\\\"correctAnswer\\\">\\n  <span class=\\\"row\\\">Correct answer: {{correctAnswer}}</span>\\n  <button class=\\\"row button button-primary\\\" (click)=reportTranslation()>Report translation</button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/englishQuiz/assets/app/main/main.component.html\n// module id = ../../../../../assets/app/main/main.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {WordService} from '../services/word.service';\nimport {GameService} from '../services/game.service';\nimport {Word} from '../models/word';\nimport {Observable} from 'rxjs/Rx';\n\n@Component({\n  selector: 'main-component',\n  providers: [WordService, GameService],\n  templateUrl: './main.component.html'\n})\n\nexport class MainComponent implements OnInit {\n\n  private wordCount = 0;\n  private guessWord: Word;\n  private isStarted = false;\n  private points = 0;\n  private countDown = 3;\n  private correctAnswer = null;\n  private timerSubscription: any = null;\n\n  constructor(private _wordService: WordService, private _gameService: GameService) {\n\n  }\n\n  startGame(type: string = 'quiz'): void {\n    this._gameService.on(type)\n      .subscribe(game => {\n\n        /*GAME STARTED*/\n        this.isStarted = true;\n        this.points = 0;\n        sessionStorage.setItem('points', '0');\n        sessionStorage.setItem('isStarted', 'true');\n\n        if (this.timerSubscription) {\n          // stop countdown if exists\n          this.timerSubscription.unsubscribe();\n          this.countDown = null;\n        }\n\n        // get random word when game starts\n        this._gameService.nextWord()\n          .subscribe((guessWord: Word) => {\n            this.guessWord = guessWord;\n            sessionStorage.setItem('guessWord', JSON.stringify(guessWord));\n          });\n      }, err => console.log(err));\n  }\n\n  endGame(): void {\n    this._gameService.over()\n      .subscribe(gameData => {\n        // clear word on game over\n        this.onGameOver(gameData.isStarted)\n      }, err => console.log(err));\n  }\n\n  ngOnInit(): void {\n\n    const isStarted = sessionStorage.getItem('isStarted');\n\n    if (isStarted === 'undefined' || isStarted === null) {\n      const timer = Observable.timer(1000, 1000).take(3);\n      this.timerSubscription = timer.subscribe(t => this.tickerFunc(t));\n    }else {\n      this.countDown = null;\n      this.guessWord = JSON.parse(sessionStorage.getItem('guessWord'));\n      this.points = JSON.parse(sessionStorage.getItem('points'));\n\n    }\n    this._gameService.status()\n      .subscribe(game => {\n        this.isStarted = game.isStarted;\n        sessionStorage.setItem('isStarted', game.isStarted)\n      });\n\n    this._wordService.count()\n      .subscribe(result => {\n        this.wordCount = result.count;\n      });\n\n  }\n\n  buttonState(): boolean {\n    return this.wordCount === 0;\n  }\n\n  onGameOver(correctAnswer: string): void {\n    this.isStarted = false;\n    this.guessWord = null;\n    this.correctAnswer = correctAnswer;\n    sessionStorage.clear();\n  }\n\n  reportTranslation() {\n    this._gameService.report(this.correctAnswer)\n      .subscribe(result => alert('Reported! Thank you.'),\n      err => console.log(err));\n  }\n\n  tickerFunc(tick): void {\n    this.countDown--;\n    if (this.countDown <= 0) {\n      this.startGame();\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/main/main.component.ts","export class Word {\r\n\r\n      constructor(public id: number,\r\n                  public value: string,\r\n                  public isHard: boolean,\r\n                  public translations) {\r\n      }\r\n    }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/models/word.ts","module.exports = \"<div class=\\\"notification\\\">\\n  <div class=\\\"{{ note.type }}\\\" *ngFor=\\\"let note of _notifications\\\">\\n          <button class=\\\"close\\\" *ngIf=\\\"note.hasCloseButton\\\" (click)=\\\"hide(note)\\\">x</button>\\n      {{ note.message }}\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/englishQuiz/assets/app/notification/notification.component.html\n// module id = ../../../../../assets/app/notification/notification.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\nimport { NotificationService } from './notification.service';\nimport { Notification } from './notification.model';\n\n@Component({\n    selector: 'notification',\n     templateUrl: './notification.component.html'\n})\nexport class NotificationComponent {\n    private _notifications;\n\n    constructor(private _notificationService: NotificationService) {\n        this._notifications = new Set<Notification>();\n\n        _notificationService.noteAdded.subscribe(note => {\n            this._notifications.add(note);\n\n            if (note.autoClose) {\n              setTimeout(() => { this.hide.bind(this)(note); }, 5000);\n            }\n\n        });\n    }\n\n    private hide(note) {\n        if(this._notifications.has(note)) {\n          this._notifications.delete(note);\n        }\n      }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/notification/notification.component.ts","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\nimport { Notification } from './notification.model';\n\n@Injectable()\nexport class NotificationService {\n  private _notifications = new Subject<Notification>();\n\n  public noteAdded = this._notifications.asObservable();\n\n  public show(notification: Notification) {\n    this._notifications.next(notification);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/notification/notification.service.ts","import {Http, Response} from '@angular/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\n@Injectable()\nexport class GameService {\n  private baseUrl: string;\n\n\n  constructor(private http: Http) {\n    this.baseUrl = 'game/';\n  }\n\n  public on(type: string) {\n    return this.http\n      .post(`${this.baseUrl}on`, { type })\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  public over() {\n    return this.http\n      .get(`${this.baseUrl}over`)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  public nextWord() {\n    return this.http\n      .get(`${this.baseUrl}next`)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  public checkAnswer(pickedWord) {\n    return this.http\n      .get(`${this.baseUrl}check/${pickedWord.id}`)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  public checkExisting(enteredWord: string) {\n    return this.http\n      .get(`${this.baseUrl}check/${enteredWord}`)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  public status() {\n    return this.http\n      .get(`${this.baseUrl}status`)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  public report(translation: string) {\n     return this.http\n      .post(`${this.baseUrl}report`, {translation})\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  public highScores() {\n    return this.http\n      .get(`${this.baseUrl}highscores`)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  public history() {\n    return this.http\n      .get(`${this.baseUrl}history`)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  public breakdown(id) {\n    return this.http\n      .get(`${this.baseUrl}breakdown/?gameId=${id}`)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  private extractData(res: Response) {\n    if (res.status < 200 || res.status >= 300) {\n      throw new Error('Bad response status: ' + res.status);\n    }\n    const body = res.json();\n    return body || {};\n  }\n\n  private handleError(error: any) {\n    // In a real world app, we might send the error to remote logging infrastructure\n    const errMsg = error.message || 'Server error';\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/services/game.service.ts","import {Http, Response} from '@angular/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\n@Injectable()\nexport class InitService {\n  private baseUrl: string;\n\n\n  constructor(private http: Http) {\n    this.baseUrl = 'init/';\n  }\n\n  public get() {\n    return this.http\n      .get(`${this.baseUrl}get`)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  private extractData(res: Response) {\n    if (res.status < 200 || res.status >= 300) {\n      throw new Error('Bad response status: ' + res.status);\n    }\n    const body = res.json();\n    return body || {};\n  }\n\n  private handleError(error: any) {\n    // In a real world app, we might send the error to remote logging infrastructure\n    const errMsg = error.message || 'Server error';\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/services/init.service.ts","import { Http, Response } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class SettingsService {\n  private baseUrl: string;\n\n  constructor(private http: Http) {\n    this.baseUrl = '/settings';\n  }\n\n\n  public get() {\n    return this.http\n      .get(this.baseUrl)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  // todo impure api update call, think about refactoring\n  public update(data) {\n    const reqObj = JSON.stringify(data);\n    return this.http\n      .post(this.baseUrl + '/handle', reqObj)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  public languages() {\n    return this.http\n      .get('../json/languageMapping.json')\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n\n  private extractData(res: Response) {\n    if (res.status < 200 || res.status >= 300) {\n      throw new Error('Bad response status: ' + res.status);\n    }\n    const body = res.json();\n    return body || {};\n  }\n\n  private handleError(error: any) {\n    // In a real world app, we might send the error to remote logging infrastructure\n    const errMsg = error.message || 'Server error';\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/services/settings.service.ts","import { Http, Response } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class UserService {\n  private baseUrl: string;\n\n\n  constructor(private http: Http) {\n    this.baseUrl = 'user/';\n  }\n\n  public update(updateObj) {\n    return this.http\n      .put(`${this.baseUrl}update`, updateObj)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  public setLocale(locale) {\n    return this.http\n      .put(`${this.baseUrl}setLocale`, { locale })\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  private extractData(res: Response) {\n    if (res.status < 200 || res.status >= 300) {\n      throw new Error('Bad response status: ' + res.status);\n    }\n    const body = res.json();\n    return body || {};\n  }\n\n  private handleError(error: any) {\n    // In a real world app, we might send the error to remote logging infrastructure\n    const errMsg = error.message || 'Server error';\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/services/user.service.ts","import { Http, Response, Headers } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class WordService {\n  private baseUrl: string;\n\n  constructor(private http: Http) {\n    this.baseUrl = 'word/';\n  }\n\n  search(value: string) {\n    return this.http\n      .get(`${this.baseUrl}search?value=` + value)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  count() {\n    return this.http\n      .get(`${this.baseUrl}count`)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  add(data) {\n    const reqObj = JSON.stringify(data);\n    return this.http\n      .post(`${this.baseUrl}create`, reqObj)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  destroy(data) {\n\n    return this.http\n      .delete(this.baseUrl + data.id)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  update(data) {\n\n    const headers = new Headers();\n    const url = `${this.baseUrl}${data.id}`;\n    headers.append('Content-Type', 'application/json');\n\n\n    return this.http\n      .put(url, JSON.stringify(data), { headers: headers })\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  checkAnswer(pickedWord) {\n    return this.http\n      .get(`${this.baseUrl}${pickedWord.term}/translations/${pickedWord.id}`)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  private extractData(res: Response) {\n    if (res.status < 200 || res.status >= 300) {\n      throw new Error('Bad response status: ' + res.status);\n    }\n    const body = res.json();\n    return body || {};\n  }\n\n  private handleError(error: any) {\n    error = error.json();\n    const errMsg = error.message || 'Server error';\n    return Observable.throw(errMsg);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/services/word.service.ts","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"one-half column\\\">\\n    <h5>Your top scores:</h5>\\n\\n\\n    <table>\\n      <thead>\\n      <th>Points</th>\\n      <th>Date</th>\\n      </thead>\\n\\n      <tbody>\\n      <tr [myHighlight] *ngFor=\\\"let h of history\\\" (click)=\\\"onSelect(h)\\\">\\n        <td>{{h.gamePoints}}</td>\\n        <td>{{h.createdAt | date:\\\"dd/MM/yyyy\\\"}}</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n\\n    <div [hidden]=\\\"!gameSelected\\\">\\n      <table>\\n        <thead>\\n        <th>Word</th>\\n        <th>Correct answer</th>\\n        </thead>\\n\\n        <tbody>\\n        <tr [class.correct]=\\\"b.correct\\\" [class.incorrect]=\\\"!b.correct\\\" *ngFor=\\\"let b of breakdown\\\">\\n          <td>{{b.questionId.value}}</td>\\n          <td>{{b.correct}}</td>\\n        </tr>\\n        </tbody>\\n\\n\\n      </table>\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"one-half column\\\">\\n\\n    <h5>High scores:</h5>\\n\\n\\n    <table>\\n      <thead>\\n      <th>Points</th>\\n      <th>Contender</th>\\n      </thead>\\n\\n      <tbody>\\n      <tr *ngFor=\\\"let hs of highScores\\\">\\n        <td>{{hs.gamePoints}}</td>\\n        <td>{{hs.contenderId.name}}</td>\\n        <td><img src=\\\"{{hs.contenderId.pictureUrl || 'images/unknown_user.png'}}\\\" alt=\\\"profile picture\\\" height=\\\"25px\\\" width=\\\"25px\\\"/></td>\\n      </tr>\\n      </tbody>\\n    </table>\\n\\n  </div>\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/englishQuiz/assets/app/stats/stats.component.html\n// module id = ../../../../../assets/app/stats/stats.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { GameService } from '../services/game.service';\n\n@Component({\n  selector: 'stats-component',\n  providers: [GameService],\n  templateUrl: './stats.component.html'\n})\n\n\nexport class StatsComponent implements OnInit {\n\n  private history = [];\n  private breakdown = [];\n  private highScores = [];\n  private gameSelected: boolean;\n\n  constructor(private _gameService: GameService) {\n\n  }\n\n  ngOnInit(): void {\n    this._gameService\n      .history()\n      .subscribe((history: any) => {\n        this.history = history;\n      });\n\n    this._gameService\n      .highScores()\n      .subscribe((highScores: any) => {\n        this.highScores = highScores;\n      });\n  }\n\n  onSelect(game): void {\n    this._gameService\n      .breakdown(game.id)\n      .subscribe((breakdown: any) => {\n        this.breakdown = breakdown;\n        this.gameSelected = true;\n      });\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/stats/stats.component.ts","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"two columns\\\">\\n    <div *ngIf=\\\"word\\\">\\n      <h2>{{word.value}}</h2>\\n      <ul>\\n        <li [myHighlight] *ngFor=\\\"let t of word.translations\\\" [class.selected]=\\\"word === selectedWord\\\"\\n            (click)=\\\"onSelect(t)\\\">{{t.value}}\\n        </li>\\n      </ul>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<p>{{points}}</p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/englishQuiz/assets/app/word-display/word-display.component.html\n// module id = ../../../../../assets/app/word-display/word-display.component.html\n// module chunks = main","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Word } from '../models/word';\nimport { GameService } from '../services/game.service';\n\n@Component({\n  selector: 'random-word',\n  templateUrl: './word-display.component.html',\n  providers: [GameService]\n})\nexport class WordDisplayComponent {\n  @Input() word: Word;\n  @Output() onGameOver = new EventEmitter<string>();\n\n  private points: number;\n\n  constructor(private _gameService: GameService) {\n\n  }\n\n  onSelect(pickedWord: {}): void {\n    this._gameService.checkAnswer(pickedWord)\n      .subscribe(data => {\n\n        this.points = data.points;\n        sessionStorage.setItem('points', data.points);\n\n        if (data.isAnswer) {\n          this.word = data;\n          sessionStorage.setItem('guessWord', JSON.stringify(data));\n        }\n\n        if (data.isStarted === false) {\n          this.onGameOver.emit(data.correctAnswer);\n        }\n\n      });\n\n  }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/word-display/word-display.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/englishQuiz/assets/app/word-longest/word-longest.component.css\n// module id = ../../../../../assets/app/word-longest/word-longest.component.css\n// module chunks = main","module.exports = \"<p>Hey man</p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projects/englishQuiz/assets/app/word-longest/word-longest.component.html\n// module id = ../../../../../assets/app/word-longest/word-longest.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-word-longest',\n  templateUrl: './word-longest.component.html',\n  styleUrls: ['./word-longest.component.css']\n})\nexport class WordLongestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/app/word-longest/word-longest.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Projects/englishQuiz/assets/main.ts"],"sourceRoot":"webpack:///"}